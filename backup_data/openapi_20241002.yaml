openapi: 3.0.3
info:
  title: reservations service - API
  description: |-
    ※現在はDraft段階です。開発と同時進行でAPIdocumentの拡充を図ります。
    1. LINE API\
    ユーザーからの注文を受け付け、予約内容を確認するためのAPIです。ユーザーがLINEを通じて注文を行い、予約内容を確認することができます。また、予約管理WEBからの通知をLINEに送信する機能も提供します。
    2. reserve API\
    注文受付URLの送信や予約内容の送信、受理を行うAPIです。ユーザーからの注文を受け付け、予約内容を処理し、必要に応じて予約管理WEBからLINEへの通知を行います。システム全体のAPIリクエストを管理します。

  version: 1.0.00
servers:
  - url: https://現在未設定/api
tags:
  - name: line_order
    description: LINE関連の処理を実施
  - name: reserve
    description: 注文受付URLの送信や予約内容の送信関連の処理を実施

paths:
  /line_order/user:
    post:
      tags:
        - line_order
      summary: ユーザーからの注文受付
      description: ユーザーからの注文を受け付けます。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: ユーザーID
                orderDetails:
                  type: string
                  description: 注文内容
      responses:
        '200':
          description: 注文が正常に受け付けられました。
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 注文が受け付けられました。
        '400':
          description: 不正なリクエストです。
          
  /line_order/reservation:
    get:
      tags:
        - line_order
      summary: 予約内容の確認
      description: ユーザーの予約内容を確認します。
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
          description: ユーザーID
      responses:
        '200':
          description: 予約内容が正常に取得されました。
          content:
            application/json:
              schema:
                type: object
                properties:
                  reservationDetails:
                    type: string
                    example: 予約内容の詳細
        '404':
          description: 予約が見つかりません。
          
  /line_order/sendNotification:
    post:
      tags:
        - line_order
      summary: 予約管理WEBからのLINE送信
      description: 予約管理WEBからLINEに通知を送信します。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: ユーザーID
                message:
                  type: string
                  description: 送信するメッセージ
      responses:
        '200':
          description: メッセージが正常に送信されました。
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: メッセージが送信されました。
        '400':
          description: 不正なリクエストです。
          
  /sendOrderUrl:
    post:
      tags:
        - reserve
      summary: 注文受付URLの送信
      description: ユーザーに注文受付URLを送信します。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: ユーザーID
                orderUrl:
                  type: string
                  description: 注文受付URL
      responses:
        '200':
          description: 注文受付URLが正常に送信されました。
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 注文受付URLが送信されました。
        '400':
          description: 不正なリクエストです。
  /sendReservationDetails:
    post:
      tags:
        - reserve
      summary: 予約内容の送信
      description: 予約内容を送信します。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: ユーザーID
                reservationDetails:
                  type: string
                  description: 予約内容
      responses:
        '200':
          description: 予約内容が正常に送信されました。
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 予約内容が送信されました。
        '400':
          description: 不正なリクエストです。
  /acceptReservation:
    post:
      tags:
        - reserve
      summary: 予約内容の受理
      description: 予約内容を受理します。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: ユーザーID
                reservationDetails:
                  type: string
                  description: 予約内容
      responses:
        '200':
          description: 予約内容が正常に受理されました。
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 予約内容が受理されました。
        '400':
          description: 不正なリクエストです。
          
  /sendNotification:
    post:
      tags:
        - reserve
      summary: 予約管理WEBからのLINE送信
      description: 予約管理WEBからLINEに通知を送信します。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: ユーザーID
                message:
                  type: string
                  description: 送信するメッセージ
      responses:
        '200':
          description: メッセージが正常に送信されました。
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: メッセージが送信されました。
        '400':
          description: 不正なリクエストです。

components:
  schemas:
    Customer:
      type: object
      properties:
        line_id:
          type: string
          example: 'abcdefg1234'
        username:
          type: string
          example: 'hoge hoge'
        useremail:
          type: string
          example: 'abc@gmail.com'
      xml:
        name: customer
    